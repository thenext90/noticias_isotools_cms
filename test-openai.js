// Test r√°pido de generaci√≥n de res√∫menes con OpenAI
const OpenAI = require('openai');
const fs = require('fs');

const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY
});

// Funci√≥n de prueba (copia de la funci√≥n principal)
async function generateAISummary(title) {
    console.log(`ü§ñ Generando resumen IA para: "${title.substring(0, 50)}..."`);
    
    try {
        // Si hay una API key v√°lida, usar OpenAI
        if (process.env.OPENAI_API_KEY && process.env.OPENAI_API_KEY !== 'tu_api_key_aqui' && process.env.OPENAI_API_KEY.startsWith('sk-')) {
            // Analizar el t√≠tulo para generar contexto espec√≠fico
            const titleLower = title.toLowerCase();
            let specificContext = "";
            let uniqueAngle = "";
            
            // Identificar norma ISO espec√≠fica
            const isoNumber = title.match(/ISO\s*(\d+)/i);
            if (isoNumber) {
                const isoCode = isoNumber[1];
                const isoContexts = {
                    '9001': 'gesti√≥n de calidad y satisfacci√≥n del cliente',
                    '14001': 'gesti√≥n ambiental y sostenibilidad empresarial',
                    '45001': 'seguridad y salud ocupacional en el trabajo',
                    '27001': 'seguridad de la informaci√≥n y ciberseguridad',
                    '50001': 'gesti√≥n energ√©tica y eficiencia en consumo',
                    '22000': 'seguridad alimentaria y control de riesgos',
                    '37001': 'sistemas anti-soborno y √©tica empresarial',
                    '55001': 'gesti√≥n de activos f√≠sicos y optimizaci√≥n',
                    '21500': 'direcci√≥n y gesti√≥n de proyectos exitosos',
                    '26000': 'responsabilidad social corporativa',
                    '37301': 'compliance management y cumplimiento normativo',
                    '22301': 'continuidad del negocio y gesti√≥n de crisis',
                    '39001': 'seguridad vial en transporte y log√≠stica',
                    '30401': 'gesti√≥n del conocimiento organizacional',
                    '16949': 'calidad automotriz y manufacturing',
                    '13485': 'dispositivos m√©dicos y regulaci√≥n sanitaria',
                    '28000': 'seguridad en cadena de suministro',
                    '42001': 'inteligencia artificial y sistemas IA √©ticos'
                };
                specificContext = isoContexts[isoCode] || 'sistemas de gesti√≥n normalizados';
            }
            
            // Generar √°ngulos √∫nicos basados en palabras clave
            if (titleLower.includes('digital') || titleLower.includes('automatizaci√≥n')) {
                uniqueAngle = "transformaci√≥n digital y automatizaci√≥n de procesos";
            } else if (titleLower.includes('auditoria') || titleLower.includes('auditor')) {
                uniqueAngle = "auditor√≠as internas y control de cumplimiento";
            } else if (titleLower.includes('kpi') || titleLower.includes('indicador') || titleLower.includes('medici√≥n')) {
                uniqueAngle = "medici√≥n de indicadores y an√°lisis de desempe√±o";
            } else if (titleLower.includes('compliance') || titleLower.includes('cumplimiento')) {
                uniqueAngle = "cumplimiento regulatorio y gesti√≥n de riesgos";
            } else if (titleLower.includes('software') || titleLower.includes('herramienta')) {
                uniqueAngle = "herramientas tecnol√≥gicas y software especializado";
            } else if (titleLower.includes('industria 4.0') || titleLower.includes('blockchain')) {
                uniqueAngle = "tecnolog√≠as emergentes e Industria 4.0";
            } else if (titleLower.includes('laboratorio') || titleLower.includes('calibraci√≥n')) {
                uniqueAngle = "gesti√≥n de laboratorios y metrolog√≠a";
            } else if (titleLower.includes('riesgo') || titleLower.includes('crisis')) {
                uniqueAngle = "gesti√≥n de riesgos y continuidad operacional";
            } else {
                uniqueAngle = "optimizaci√≥n operacional y mejora continua";
            }
            
            const enhancedPrompt = `Eres un consultor senior especializado en ${specificContext}. Analiza este t√≠tulo de art√≠culo y genera un resumen √∫nico de exactamente 2-3 oraciones que se enfoque espec√≠ficamente en ${uniqueAngle}:

T√çTULO: "${title}"

INSTRUCCIONES ESPEC√çFICAS:
1. Identifica QU√â problema empresarial espec√≠fico resuelve
2. Menciona beneficios CUANTIFICABLES o resultados medibles
3. Incluye el sector o tipo de organizaciones que m√°s se benefician
4. Usa terminolog√≠a t√©cnica espec√≠fica de ${specificContext}
5. Evita frases gen√©ricas como "mejora la eficiencia" - s√© espec√≠fico
6. Enf√≥cate en el aspecto de ${uniqueAngle}

FORMATO: Escribe exactamente 2-3 oraciones profesionales sin introducir con "Este art√≠culo" o similar. Ve directo al contenido.`;

            const completion = await openai.chat.completions.create({
                model: "gpt-3.5-turbo",
                messages: [{ 
                    role: "user", 
                    content: enhancedPrompt 
                }],
                max_tokens: 250,
                temperature: 0.9
            });

            const summary = completion.choices[0].message.content.trim();
            console.log(`‚úÖ Resumen generado con OpenAI (${summary.length} caracteres)`);
            
            return summary;
        }
    } catch (error) {
        console.error(`‚ùå Error generando resumen:`, error.message);
        return "Error en generaci√≥n";
    }
}

// T√≠tulos de prueba para verificar diversidad
const testTitles = [
    "¬øCu√°les son los beneficios de la ISO 9001 2026?",
    "Software de gesti√≥n medioambiental: 7 requisitos clave para elegir la mejor soluci√≥n para tu empresa",
    "Automatizaci√≥n de procesos ISO: c√≥mo las herramientas digitales transforman la gesti√≥n de calidad",
    "ISO 37301: sistemas de gesti√≥n de compliance y su implementaci√≥n pr√°ctica",
    "Auditor√≠as internas ISO: metodolog√≠a avanzada para el control de calidad empresarial"
];

async function testSummaries() {
    console.log('üß™ PROBANDO GENERACI√ìN DE RES√öMENES CON OPENAI');
    console.log('='.repeat(60));
    
    for (let i = 0; i < testTitles.length; i++) {
        console.log(`\n${i + 1}. T√çTULO: ${testTitles[i]}`);
        console.log('-'.repeat(50));
        
        const summary = await generateAISummary(testTitles[i]);
        console.log(`RESUMEN: ${summary}`);
        
        // Pausa entre llamadas
        await new Promise(resolve => setTimeout(resolve, 1000));
    }
}

testSummaries().catch(console.error);